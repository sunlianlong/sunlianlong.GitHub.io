(window.webpackJsonp=window.webpackJsonp||[]).push([[57],{632:function(n,e,s){"use strict";s.r(e);var a=s(3),t=Object(a.a)({},(function(){var n=this,e=n.$createElement,s=n._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v('//by函数接受一个成员名字符串做为参数\n//并返回一个可以用来对包含该成员的对象数组进行排序的比较函数\nvar by = function(name, minor) {\n    return function(o, p) {\n        var a, b;\n        if (o && p && typeof o === \'object\' && typeof p === \'object\') {\n            a = o[name];\n            b = p[name];\n            if (a === b) {\n                return typeof minor === \'function\' ? minor(o, p) : 0;\n            }\n            if (typeof a === typeof b) {\n                return a < b ? -1 : 1;\n            }\n            return typeof a < typeof b ? -1 : 1;\n        } else {\n            thro("error");\n        }\n    }\n}\nvar employees=[];\nemployees[0]={name:"George",age:32, retiredate:"March12, 2014"}\nemployees[1]={name:"Edward",age:17, retiredate:"June2, 2023"}\nemployees[2]={name:"Christine",age:58, retiredate:"December20, 2036"}\nemployees[3]={name:"Sarah",age:62, retiredate:"April30, 2020"};\n//起到引用作用又不影响原数组的方法\nvar newemployees = employees.concat();\nnewemployees.sort(by("retiredate"));\n//起到引用作用又不影响原数组的方法\nvar new2employees = newemployees.concat();\nnew2employees.sort(by("age",by(\'retiredate\')));\nconsole.log(employees);\nconsole.log(newemployees);\nconsole.log(new2employees);\n')])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br"),s("span",{staticClass:"line-number"},[n._v("20")]),s("br"),s("span",{staticClass:"line-number"},[n._v("21")]),s("br"),s("span",{staticClass:"line-number"},[n._v("22")]),s("br"),s("span",{staticClass:"line-number"},[n._v("23")]),s("br"),s("span",{staticClass:"line-number"},[n._v("24")]),s("br"),s("span",{staticClass:"line-number"},[n._v("25")]),s("br"),s("span",{staticClass:"line-number"},[n._v("26")]),s("br"),s("span",{staticClass:"line-number"},[n._v("27")]),s("br"),s("span",{staticClass:"line-number"},[n._v("28")]),s("br"),s("span",{staticClass:"line-number"},[n._v("29")]),s("br"),s("span",{staticClass:"line-number"},[n._v("30")]),s("br"),s("span",{staticClass:"line-number"},[n._v("31")]),s("br"),s("span",{staticClass:"line-number"},[n._v("32")]),s("br"),s("span",{staticClass:"line-number"},[n._v("33")]),s("br"),s("span",{staticClass:"line-number"},[n._v("34")]),s("br")])]),s("p",[n._v("声明数组变量，每个都是对象:")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v('var arr = [{name:"Json",age:12},{name:"Smith",age:27 },{name:"Allon",age:2 }];\n\n// 通用算法：对数组对象进行排序\nfunction compare(propertyName) {\n\treturn function (object1, object2) {\n\tvar value1 = object1[propertyName];\n\tvar value2 = object2[propertyName];\n\tif (value2 < value1) {\n\t\treturn -1;\n\t}else if (value2 > value1) {\n\t\treturn 1;\n\t}else {\n\t\treturn 0;\n\t}\n}\n}\n// 调用算法，对数组排序\narr .sort(compare("age"));  \n')])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br")])])])}),[],!1,null,null,null);e.default=t.exports}}]);